@page "/"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using ContributionSystem.ViewModels.Models.Contribution;
@using Microsoft.AspNetCore.Components.Forms
@using ContributionSystem.UI.Validators
@using Blazored.FluentValidation
@inject HttpClient Http

<div class="row">
    <EditForm role="form" class="col-3" OnValidSubmit="@AddItem" Model="@newItem">
        <FluentValidationValidator />
        <div class="form-group">
            <label>Percent:</label>
            <div class="row">
                <InputNumber class="form-control" placeholder="Percent" @bind-Value="newItem.Percent" />
                <ValidationMessage For="@(() => newItem.Percent)" />
            </div>
            <br />
            <label>Term:</label>
            <div class="row">
                <InputNumber class="form-control" placeholder="Term" @bind-Value="newItem.Term" />
                <ValidationMessage For="@(() => newItem.Term)" />
            </div>
            <br />
            <label>Summ:</label>
            <div class="row">
                <InputNumber class="form-control" placeholder="Summ" @bind-Value="newItem.StartValue" />
                <ValidationMessage For="@(() => newItem.StartValue)" />
            </div>
            <br />
            <div class="text-center">
                <button class="btn btn-secondary" type="submit">Calculate</button>
            </div>
        </div>
    </EditForm>
    <div class="col-9 text-center" style="max-height: 643.5px; overflow: auto;">
        <table class="table table-bordered">
            <thead>
                <tr class="active bg-light">
                    <th class="col-4" scope="row">
                        Month
                    </th>
                    <th class="col-2">
                        %
                    </th>
                    <th class="col-3">
                        Sum
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (content != null)
                {
                    @foreach (var item in content.Items)
                    {
                        <tr>
                            <td scope="row">
                                @item.MonthNumber
                            </td>
                            <td>
                                @item.Income
                            </td>
                            <td>
                                @item.Sum
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <h1>@errorMessage</h1>
</div>

@code {
    RequestCalculateContributionViewModel newItem = new();

    ResponseCalculateContributionViewModel content;

    string errorMessage;

    private async Task AddItem()
    {
        var response = await Http.PostAsJsonAsync("/api/contribution/calculate", newItem);
        if (((int)response.StatusCode) == 200)
        {
            content = await response.Content.ReadFromJsonAsync<ResponseCalculateContributionViewModel>();
        }
        else
        {
            errorMessage = "Error!";
        }
    }
}
